//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float3 TilingAxes_Local_CurlNoiseForce_VectorField;// Offset:  372 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce_VectorField;// Offset:  384 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce_VectorField;// Offset:  400 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce_VectorField;// Offset:  416 Size:    12 [unused]
//   float3 TilingAxes_Emitter_VectorField32;// Offset:  432 Size:    12 [unused]
//   float3 Dimensions_Emitter_VectorField32;// Offset:  448 Size:    12 [unused]
//   float3 MinBounds_Emitter_VectorField32;// Offset:  464 Size:    12
//   float3 MaxBounds_Emitter_VectorField32;// Offset:  480 Size:    12
//   float3 TilingAxes_Local_CurlNoiseForce001_VectorField;// Offset:  496 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce001_VectorField;// Offset:  512 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce001_VectorField;// Offset:  528 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce001_VectorField;// Offset:  544 Size:    12 [unused]
//   float MinTime_Emitter_ScaleFactor_VectorCurve;// Offset:  556 Size:     4
//   float MaxTime_Emitter_ScaleFactor_VectorCurve;// Offset:  560 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleFactor_VectorCurve;// Offset:  564 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleFactor_VectorCurve;// Offset:  568 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_RandomSeed;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_BoxLocation_SurfaceOnlyBandThickness;// Offset:  100 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_BoxSize;// Offset:  112 Size:    16
//   float4 Constants_Emitter_BoxLocation_BoxOffset;// Offset:  128 Size:    16
//   float Constants_Emitter_BoxLocation_NormalizedBoxRotationAngle;// Offset:  144 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_RotateBoxOnAxis;// Offset:  160 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_SpawnGroupMask;// Offset:  176 Size:     4 [unused]
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:  180 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  184 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:  188 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  192 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:  208 Size:    16
//   int Constants_Emitter_SphereLocation_SpawnGroupMask;// Offset:  224 Size:     4 [unused]
//   float Constants_Emitter_Drag_Drag; // Offset:  228 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  232 Size:     4 [unused]
//   float4 Constants_Emitter_WindForce_WindSpeed;// Offset:  240 Size:    16
//   float Constants_Emitter_WindForce_WindSpeedScale;// Offset:  256 Size:     4
//   float Constants_Emitter_WindForce_AirResistance;// Offset:  260 Size:     4
//   float Constants_Emitter_PointAttractionForce_AttractionRadius;// Offset:  264 Size:     4
//   float Constants_Emitter_PointAttractionForce_AttractionStrength;// Offset:  268 Size:     4
//   float Constants_Emitter_PointAttractionForce_FalloffExponent;// Offset:  272 Size:     4
//   float Constants_Emitter_PointAttractionForce_KillRadius;// Offset:  276 Size:     4 [unused]
//   float4 Constants_Emitter_GravityForce_Gravity;// Offset:  288 Size:    16
//   float Constants_Emitter_VortexForce_InfluenceFalloffRadius;// Offset:  304 Size:     4 [unused]
//   float4 Constants_Emitter_VortexForce_VortexAxis;// Offset:  320 Size:    16
//   float Constants_Emitter_VortexForce_VortexForceAmount;// Offset:  336 Size:     4
//   float Constants_Emitter_VortexForce_OriginPullAmount;// Offset:  340 Size:     4
//   int Constants_Emitter_CurlNoiseForce_RandomSeed;// Offset:  344 Size:     4
//   float Constants_Emitter_CurlNoiseForce_NoiseFrequency;// Offset:  348 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce_PanNoiseField;// Offset:  352 Size:    16
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskAngle;// Offset:  368 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskFalloffAngle;// Offset:  372 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_NoiseStrength;// Offset:  376 Size:     4
//   int Constants_Emitter_CurlNoiseForce001_RandomSeed;// Offset:  380 Size:     4
//   float Constants_Emitter_CurlNoiseForce001_NoiseFrequency;// Offset:  384 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce001_PanNoiseField;// Offset:  400 Size:    16 [unused]
//   float Constants_Emitter_CurlNoiseForce001_CurlNoiseConeMaskAngle;// Offset:  416 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce001_CurlNoiseConeMaskFalloffAngle;// Offset:  420 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce001_NoiseStrength;// Offset:  424 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  428 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  432 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  436 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VectorFieldSampler_Emitter_VectorField32    sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// VectorFieldTexture_Emitter_VectorField32    texture  float4          3d             t2      1 
// CurveLUT_Emitter_ScaleFactor_VectorCurve    texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[36], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB4[27], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 12
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  iadd r1.x, r0.x, cb0[21].y
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ishl r1.yzw, cb0[21].yyyy, l(0, 1, 2, 3)
  iadd r1.yzw, r0.xxxx, r1.yyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t0.yxzw
  imad r2.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r1.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r3.x, r2.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r2.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r2.wwww, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r1.wwww, t0.yzwx
  imad r4.xyzw, l(9, 10, 12, 13), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.y, r4.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.wwww, t0.yxzw
  imad r5.xyzw, l(14, 21, 22, 23), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r2.w, r5.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.w, r5.zzzz, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.w, r5.wwww, t0.yzwx
  ld_indexable(buffer)(sint,sint,sint,sint) r5.x, r0.xxxx, t1.xyzw
  imad r5.yzw, l(0, 24, 25, 26), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r6.x, r5.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.y, r5.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.z, r5.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r5.y, r1.w, l(0.000010)
  add r5.z, r5.y, l(-0.000100)
  lt r5.z, r0.w, r5.z
  div r5.y, r0.w, r5.y
  mul r7.xyz, cb4[15].xyzx, cb4[16].xxxx
  add_sat r5.w, -cb4[16].y, l(1.000000)
  mul r8.xyz, r5.wwww, r7.xyzx
  dp3 r5.w, r7.xyzx, r7.xyzx
  sqrt r7.w, r5.w
  lt r5.w, r7.w, l(0.000010)
  movc r7.xyzw, r5.wwww, l(0,0,0.000001,1.000000), r7.xyzw
  div r7.xyz, r7.xyzx, r7.wwww
  movc r7.xyzw, r5.wwww, l(0,0,0.000001,0.000001), r7.xyzw
  dp3 r5.w, r6.xyzx, r6.xyzx
  sqrt r6.w, r5.w
  lt r5.w, r6.w, l(0.000010)
  movc r9.xyzw, r5.wwww, l(0,0,0.000001,1.000000), r6.xyzw
  div r9.xyz, r9.xyzx, r9.wwww
  movc r9.xyzw, r5.wwww, l(0,0,0.000001,0.000001), r9.xyzw
  dp3 r5.w, r7.xyzx, r9.xyzx
  mul r5.w, r9.w, r5.w
  lt r5.w, r5.w, r7.w
  and r7.xyz, r8.xyzx, r5.wwww
  add r8.xyz, -r4.xyzx, cb2[25].xyzx
  add r9.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000100, 0.000000)
  dp3 r5.w, r9.xyzx, r9.xyzx
  sqrt r6.w, r5.w
  rsq r5.w, r5.w
  mul r9.xyz, r5.wwww, r9.xyzx
  lt r5.w, cb4[16].z, r6.w
  log r6.w, r6.w
  mul r6.w, r6.w, cb4[17].x
  exp r6.w, r6.w
  mul r6.w, r6.w, cb4[16].w
  movc r5.w, r5.w, l(0), r6.w
  mad r7.xyz, r9.xyzx, r5.wwww, r7.xyzx
  mad r7.xyz, cb4[18].xyzx, r2.yyyy, r7.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  sqrt r8.w, r5.w
  lt r5.w, r8.w, l(0.000010)
  movc r8.xyzw, r5.wwww, l(0,0,1.000000,1.000000), r8.xyzw
  div r8.xyz, r8.xyzx, r8.wwww
  movc r8.xyz, r5.wwww, l(0,0,1.000000,0), r8.xyzx
  mul r9.xyz, r8.zxyz, cb4[20].yzxy
  mad r9.xyz, r8.yzxy, cb4[20].zxyz, -r9.xyzx
  mad r8.xyz, cb4[21].yyyy, r8.xyzx, r8.xyzx
  add r8.xyz, r8.xyzx, r9.xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  mad r7.xyz, r8.xyzx, cb4[21].xxxx, r7.xyzx
  mov r8.x, cb4[21].z
  mov r8.yw, cb3[1].xxxx
  imad r8.xy, r8.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r5.w, r8.y, l(0x3c88596c), r8.x
  imad r6.w, l(0x3c88596c), r5.w, r8.y
  imad r7.w, r5.w, r6.w, l(0x3c88596c)
  imad r5.w, r6.w, r7.w, r5.w
  ishr r5.w, r5.w, l(8)
  and r5.w, r5.w, l(0x00ffffff)
  utof r5.w, r5.w
  mad r9.xyz, r5.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r4.xyzx
  mul r10.xyz, cb1[0].zzzz, cb4[22].xyzx
  mad r9.xyz, r9.xyzx, cb4[21].wwww, -r10.xyzx
  mad r9.xyz, r9.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
  add r10.xyz, -cb0[29].xyzx, cb0[30].xyzx
  div r9.xyz, r9.xyzx, r10.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t2.xyzw, s0, l(0.000000)
  mad r7.xyz, r9.xyzx, cb4[23].zzzz, r7.xyzx
  mov r8.z, cb4[23].w
  imad r8.xy, r8.zwzz, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r5.w, r8.y, l(0x3ca1bf79), r8.x
  imad r6.w, l(0x3ca1bf79), r5.w, r8.y
  imad r7.w, r5.w, r6.w, l(0x3ca1bf79)
  imad r5.w, r6.w, r7.w, r5.w
  ishr r5.w, r5.w, l(8)
  and r5.w, r5.w, l(0x00ffffff)
  utof r5.w, r5.w
  mad r8.xyz, r5.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r4.xyzx
  mul r8.xyz, r8.xyzx, cb4[24].xxxx
  mad r8.xyz, r8.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
  div r8.xyz, r8.xyzx, r10.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t2.xyzw, s0, l(0.000000)
  mad r7.xyz, r8.xyzx, cb4[26].zzzz, r7.xyzx
  max r5.w, r2.y, l(0.000100)
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
  mul r7.xyz, r7.xyzx, r5.wwww
  mad r6.xyz, r7.xyzx, cb1[0].xxxx, r6.xyzx
  max r5.w, cb4[14].y, l(0.000000)
  mad r5.w, cb1[0].x, r5.w, l(1.000000)
  div r6.xyz, r6.xyzx, r5.wwww
  mad r4.xyz, r6.xyzx, cb1[0].xxxx, r4.xyzx
  add r5.w, r5.y, -cb0[34].w
  mul_sat r5.w, r5.w, cb0[35].y
  mul r6.w, r5.w, cb0[35].z
  round_ni r6.w, r6.w
  lt r7.x, r6.w, cb0[35].z
  add r7.y, r6.w, l(1.000000)
  movc r7.x, r7.x, r7.y, r6.w
  mad r5.w, r5.w, cb0[35].z, -r6.w
  mul r7.y, r6.w, l(3.000000)
  mul r7.z, r7.x, l(3.000000)
  ftou r7.y, r7.y
  ld_indexable(buffer)(float,float,float,float) r8.x, r7.yyyy, t3.xyzw
  mad r7.yw, r6.wwww, l(0.000000, 3.000000, 0.000000, 3.000000), l(0.000000, 1.000000, 0.000000, 2.000000)
  ftou r7.yw, r7.yyyw
  ld_indexable(buffer)(float,float,float,float) r8.y, r7.yyyy, t3.yxzw
  ld_indexable(buffer)(float,float,float,float) r8.z, r7.wwww, t3.yzxw
  ftou r6.w, r7.z
  ld_indexable(buffer)(float,float,float,float) r7.y, r6.wwww, t3.wxyz
  mad r9.xy, r7.xxxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
  ftou r9.xy, r9.xyxx
  ld_indexable(buffer)(float,float,float,float) r7.z, r9.xxxx, t3.wyxz
  ld_indexable(buffer)(float,float,float,float) r7.w, r9.yyyy, t3.wyzx
  add r7.xyz, -r8.xyzx, r7.yzwy
  mad r7.xyz, r5.wwww, r7.xyzx, r8.xyzx
  mul r7.xyz, r7.xyzx, r3.xyzx
  mov r5.w, r6.x
  mov r7.w, r6.z
  mov r6.xw, r6.xxxy
else 
  uge r8.x, r0.x, r0.y
  and r0.z, r0.z, r8.x
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r8.xyzw, r0.xxxx, cb0[10].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r8.y, r8.x
    iadd r0.y, r8.z, r0.y
    iadd r0.y, r8.w, r0.y
    ige r8.xyzw, r0.xxxx, cb0[11].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r8.y, r8.x
    iadd r0.z, r8.z, r0.z
    iadd r0.z, r8.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r5.x, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r8.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r0.xyz, r0.xxxx, r8.xyzx, cb5[25].xyzx
    add r8.x, -cb4[0].x, cb4[0].y
    imul null, r9.x, vThreadID.x, l(0x0019660d)
    imul null, r9.y, cb0[9].z, l(0x0019660d)
    iadd r8.yz, r9.xxyx, l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r9.xyzw, r8.yyyy, r8.yyyy, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r10.xyzw, r8.zzzz, r9.xyzw, r8.yyyy
    imad r11.xyzw, r9.xyzw, r10.xyzw, r8.zzzz
    imad r11.xyzw, r10.xyzw, r11.xyzw, r8.yyyy
    imad r9.xyzw, r10.xyzw, r11.xyzw, r9.xyzw
    ishr r9.xyzw, r9.xyzw, l(8, 8, 8, 8)
    and r9.xyzw, r9.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r9.xyzw, r9.xyzw
    mul r8.x, r8.x, r9.x
    mad r4.w, r8.x, l(0.000000), cb4[0].x
    add r8.x, -cb4[0].w, cb4[1].x
    mul r8.x, r8.x, r9.y
    mad r8.x, r8.x, l(0.000000), cb4[0].w
    add r8.w, -cb4[1].z, cb4[1].w
    mul r8.w, r8.w, r9.z
    mad r1.w, r8.w, l(0.000000), cb4[1].z
    mul r2.w, r8.x, l(360.000000)
    mul r2.z, r9.w, l(0.000000)
    imad r9.xyzw, r8.yyyy, r8.yyyy, l(0x3bd68f11, 0x3bbd2904, 0x3ba3c2f7, 0x3b8a5cea)
    imad r10.xyzw, r8.zzzz, r9.xyzw, r8.yyyy
    imad r11.xyzw, r9.xyzw, r10.xyzw, r8.zzzz
    imad r11.xyzw, r10.xyzw, r11.xyzw, r8.yyyy
    imad r9.xyzw, r10.xyzw, r11.xyzw, r9.xyzw
    ishr r9.xyzw, r9.xyzw, l(8, 8, 8, 8)
    and r9.xyzw, r9.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r9.xyzw, r9.xyzw
    mul r9.xyz, r9.xyzx, cb4[7].xyzx
    mul r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r9.xyz, cb4[7].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r9.xyzx
    add r9.xyz, r9.xyzx, cb4[8].xyzx
    mul r10.xyz, r9.yyyy, cb2[1].xyzx
    mad r10.xyz, r9.xxxx, cb2[0].xyzx, r10.xyzx
    mad r9.xyz, r9.zzzz, cb2[2].xyzx, r10.xyzx
    add r0.xyz, r0.xyzx, r9.xyzx
    mul r9.x, r9.w, l(0.000000)
    imad r8.xw, r8.yyyy, r8.yyyy, l(0x3b70f6dd, 0, 0, 0x3b5790d0)
    imad r10.xy, r8.zzzz, r8.xwxx, r8.yyyy
    imad r10.zw, r8.xxxw, r10.xxxy, r8.zzzz
    imad r8.yz, r10.xxyx, r10.zzwz, r8.yyyy
    imad r8.xy, r10.xyxx, r8.yzyy, r8.xwxx
    ishr r8.xy, r8.xyxx, l(8, 8, 0, 0)
    and r8.xy, r8.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r8.xy, r8.xyxx
    mul r9.yz, r8.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r8.xyz, r9.xyzx, l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r8.x, r9.x, r8.x
    mad r8.w, -r8.y, r8.y, l(1.000000)
    sqrt r8.w, r8.w
    mul r9.x, r8.w, r9.x
    mul r9.y, r8.w, r8.x
    log r8.x, r8.z
    mul r8.x, r8.x, l(0.333333)
    exp r8.x, r8.x
    mov r9.z, r8.y
    mul r8.xyz, r8.xxxx, r9.xyzx
    mul r8.xyz, r8.xyzx, cb4[11].wwww
    mul r8.xyz, r8.xyzx, cb4[12].xyzx
    add r0.xyz, r0.xyzx, cb4[13].xyzx
    mul r9.xyz, r8.yyyy, cb2[1].xyzx
    mad r8.xyw, r8.xxxx, cb2[0].xyxz, r9.xyxz
    mad r8.xyz, r8.zzzz, cb2[2].xyzx, r8.xywx
    add r0.xyz, r0.xyzx, r8.xyzx
    max r8.x, r1.w, l(0.000010)
    add r8.y, r8.x, l(-0.000100)
    lt r5.z, r0.w, r8.y
    div r5.y, r0.w, r8.x
    mul r8.xyz, cb4[15].xyzx, cb4[16].xxxx
    add_sat r9.x, -cb4[16].y, l(1.000000)
    mul r9.xyz, r8.xyzx, r9.xxxx
    dp3 r8.x, r8.xyzx, r8.xyzx
    sqrt r8.w, r8.x
    lt r8.x, r8.w, l(0.000010)
    movc r10.yz, r8.xxxx, l(0,0.000001,1.000000,0), r8.zzwz
    div r10.x, r10.y, r10.z
    movc r8.xy, r8.xxxx, l(0.000001,0.000001,0,0), r10.xzxx
    mul r8.x, r8.x, l(0.000000)
    lt r8.x, r8.x, r8.y
    and r8.xyz, r9.xyzx, r8.xxxx
    add r9.xyz, -r0.xyzx, cb2[25].xyzx
    add r10.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000100, 0.000000)
    dp3 r8.w, r10.xyzx, r10.xyzx
    sqrt r10.w, r8.w
    rsq r8.w, r8.w
    mul r10.xyz, r8.wwww, r10.xyzx
    lt r8.w, cb4[16].z, r10.w
    log r10.w, r10.w
    mul r10.w, r10.w, cb4[17].x
    exp r10.w, r10.w
    mul r10.w, r10.w, cb4[16].w
    movc r8.w, r8.w, l(0), r10.w
    mad r8.xyz, r10.xyzx, r8.wwww, r8.xyzx
    add r8.xyz, r8.xyzx, cb4[18].xyzx
    dp3 r8.w, r9.xyzx, r9.xyzx
    sqrt r9.w, r8.w
    lt r8.w, r9.w, l(0.000010)
    movc r9.xyzw, r8.wwww, l(0,0,1.000000,1.000000), r9.xyzw
    div r9.xyz, r9.xyzx, r9.wwww
    movc r9.xyz, r8.wwww, l(0,0,1.000000,0), r9.xyzx
    mul r10.xyz, r9.zxyz, cb4[20].yzxy
    mad r10.xyz, r9.yzxy, cb4[20].zxyz, -r10.xyzx
    mad r9.xyz, cb4[21].yyyy, r9.xyzx, r9.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx
    dp3 r8.w, r9.xyzx, r9.xyzx
    rsq r8.w, r8.w
    mul r9.xyz, r8.wwww, r9.xyzx
    mad r8.xyz, r9.xyzx, cb4[21].xxxx, r8.xyzx
    mov r9.x, cb4[21].z
    mov r9.yw, cb3[1].xxxx
    imad r9.xy, r9.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r8.w, r9.y, l(0x3d20bdba), r9.x
    imad r9.x, l(0x3d20bdba), r8.w, r9.y
    imad r9.y, r8.w, r9.x, l(0x3d20bdba)
    imad r8.w, r9.x, r9.y, r8.w
    ishr r8.w, r8.w, l(8)
    and r8.w, r8.w, l(0x00ffffff)
    utof r8.w, r8.w
    mad r10.xyz, r8.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r0.xyzx
    mul r11.xyz, cb1[0].zzzz, cb4[22].xyzx
    mad r10.xyz, r10.xyzx, cb4[21].wwww, -r11.xyzx
    mad r10.xyz, r10.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
    add r11.xyz, -cb0[29].xyzx, cb0[30].xyzx
    div r10.xyz, r10.xyzx, r11.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t2.xyzw, s0, l(0.000000)
    mad r8.xyz, r10.xyzx, cb4[23].zzzz, r8.xyzx
    mov r9.z, cb4[23].w
    imad r9.xy, r9.zwzz, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r8.w, r9.y, l(0x3d3a23c7), r9.x
    imad r9.x, l(0x3d3a23c7), r8.w, r9.y
    imad r9.y, r8.w, r9.x, l(0x3d3a23c7)
    imad r8.w, r9.x, r9.y, r8.w
    ishr r8.w, r8.w, l(8)
    and r8.w, r8.w, l(0x00ffffff)
    utof r8.w, r8.w
    mad r9.xyz, r8.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r0.xyzx
    mul r9.xyz, r9.xyzx, cb4[24].xxxx
    mad r9.xyz, r9.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
    div r9.xyz, r9.xyzx, r11.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t2.xyzw, s0, l(0.000000)
    mad r8.xyz, r9.xyzx, cb4[26].zzzz, r8.xyzx
    mul r8.xyz, r0.wwww, r8.xyzx
    max r8.w, cb4[14].y, l(0.000000)
    mad r8.w, r0.w, r8.w, l(1.000000)
    div r6.xyz, r8.xyzx, r8.wwww
    mad r4.xyz, r6.xyzx, r0.wwww, r0.xyzx
    add r0.x, r5.y, -cb0[34].w
    mul_sat r0.x, r0.x, cb0[35].y
    mul r0.y, r0.x, cb0[35].z
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[35].z
    add r8.x, r0.y, l(1.000000)
    movc r0.z, r0.z, r8.x, r0.y
    mad r0.x, r0.x, cb0[35].z, -r0.y
    mul r8.xy, r0.yzyy, l(3.000000, 3.000000, 0.000000, 0.000000)
    ftou r8.x, r8.x
    ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t3.xwyz
    mad r9.xy, r0.yyyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
    ftou r9.xy, r9.xyxx
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.xxxx, t3.ywxz
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.yyyy, t3.ywzx
    ftou r0.y, r8.y
    ld_indexable(buffer)(float,float,float,float) r9.x, r0.yyyy, t3.xyzw
    mad r0.yz, r0.zzzz, l(0.000000, 3.000000, 3.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
    ftou r0.yz, r0.yyzy
    ld_indexable(buffer)(float,float,float,float) r9.y, r0.yyyy, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r0.zzzz, t3.yzxw
    add r9.xyz, -r8.xzwx, r9.xyzx
    mad r7.xyz, r0.xxxx, r9.xyzx, r8.xzwx
    mov r2.x, cb4[3].z
    mov r1.xyz, cb4[3].xywx
    mov r3.xyz, l(1.000000,1.000000,1.000000,0)
    mov r2.y, l(1.000000)
    mov r5.w, r6.x
    mov r7.w, r6.z
    mov r3.w, r4.w
    mov r6.xw, r6.xxxy
  else 
    mov r0.w, l(0)
    mov r1.xyzw, l(0,0,0,0)
    mov r7.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
  endif 
endif 
and r0.x, r5.z, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r8.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r8.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r8.w, r8.y, l(0), g0.xxxx
  iadd r8.w, r0.y, r8.w
  ld_structured r9.x, r8.z, l(0), g0.xxxx
  iadd r9.x, r8.w, r9.x
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r8.x, l(0), r0.x
  store_structured g0.x, r8.y, l(0), r0.y
  store_structured g0.x, r8.z, l(0), r8.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r9.x
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r8.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r8.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r8.w, r8.y, l(0), g1.xxxx
  iadd r8.w, r0.z, r8.w
  ld_structured r9.x, r8.z, l(0), g1.xxxx
  iadd r9.x, r8.w, r9.x
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r8.x, l(0), r0.y
  store_structured g1.x, r8.y, l(0), r0.z
  store_structured g1.x, r8.z, l(0), r8.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r9.x
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r8.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r8.x
endif 
sync_g_t
if_nz r5.z
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r1.xxxx
  ishl r8.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r8.xyzw, r0.xxxx, r8.xyzw
  iadd r8.xyzw, r8.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r8.xxxx, r1.yyyy
  imad r9.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r2.xxxx
  store_uav_typed u1.xyzw, r8.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r3.xxxx
  store_uav_typed u1.xyzw, r9.zzzz, r3.yyyy
  store_uav_typed u1.xyzw, r9.wwww, r3.zzzz
  store_uav_typed u1.xyzw, r8.zzzz, r1.wwww
  imad r1.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r2.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r2.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r5.yyyy
  store_uav_typed u1.xyzw, r1.wwww, r4.xxxx
  imad r1.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r5.wwww
  store_uav_typed u1.xyzw, r8.wwww, r6.wwww
  store_uav_typed u1.xyzw, r1.wwww, r7.wwww
  imad r1.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r7.xxxx
  store_uav_typed u1.xyzw, r1.yyyy, r7.yyyy
  store_uav_typed u1.xyzw, r1.zzzz, r7.zzzz
  store_uav_typed u1.xyzw, r1.wwww, r2.wwww
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.wwww
  store_uav_typed u1.xyzw, r1.yyyy, r4.wwww
  store_uav_typed u0.xyzw, r0.yyyy, r5.xxxx
  store_uav_typed u1.xyzw, r1.zzzz, r6.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r6.yyyy
  imad r0.x, l(26), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r6.zzzz
endif 
ret 
// Approximately 477 instruction slots used
