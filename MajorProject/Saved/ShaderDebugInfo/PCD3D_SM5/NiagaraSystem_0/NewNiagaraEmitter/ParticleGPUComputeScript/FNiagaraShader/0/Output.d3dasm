//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_ScaleFactor_VectorCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_ScaleFactor_VectorCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleFactor_VectorCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleFactor_VectorCurve;// Offset:  384 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_InitializeParticle_Lifetime;// Offset:    0 Size:     4
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   16 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   32 Size:     4
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   48 Size:    16
//   float Constants_Emitter_InitializeParticle_SpriteRotation;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  100 Size:     4 [unused]
//   float4 Constants_Emitter_Color_Color;// Offset:  112 Size:    16
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  128 Size:    16
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  144 Size:     4
//   float Emitter_AlphaScale;          // Offset:  148 Size:     4
//   float Emitter_SpawnRate;           // Offset:  152 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_ScaleFactor_VectorCurve    texture   float         buf             t2      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[10], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 10
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.zzzz, t0.yzxw
  ishl r1.x, cb0[21].y, l(3)
  iadd r1.x, r0.x, r1.x
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.wwww, t0.yxzw
  imad r3.xyzw, l(10, 12, 13, 14), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.x, r3.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r3.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.z, r3.wwww, t0.yzxw
  imad r3.xyzw, l(21, 22, 23, 24), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.w, r3.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(sint,sint,sint,sint) r3.y, r0.xxxx, t1.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.x, r3.wwww, t0.xyzw
  imad r3.zw, l(0, 0, 25, 26), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r5.y, r3.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r3.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r3.z, r1.x, l(0.000010)
  add r3.w, r3.z, l(-0.000100)
  lt r3.w, r0.w, r3.w
  div r3.z, r0.w, r3.z
  mad r4.xyz, r5.xyzx, cb1[0].xxxx, r4.xyzx
  mul r6.xyz, cb4[7].xyzx, cb4[8].xyzx
  mul r4.w, cb4[7].w, cb4[9].x
  mul r4.w, r4.w, cb4[9].y
  add r5.w, r3.z, -cb0[23].y
  mul_sat r5.w, r5.w, cb0[23].w
  mul r6.w, r5.w, cb0[24].x
  round_ni r6.w, r6.w
  lt r7.x, r6.w, cb0[24].x
  add r7.y, r6.w, l(1.000000)
  movc r7.x, r7.x, r7.y, r6.w
  mad r5.w, r5.w, cb0[24].x, -r6.w
  mul r7.y, r6.w, l(3.000000)
  mul r7.z, r7.x, l(3.000000)
  ftou r7.y, r7.y
  ld_indexable(buffer)(float,float,float,float) r8.x, r7.yyyy, t2.xyzw
  mad r7.yw, r6.wwww, l(0.000000, 3.000000, 0.000000, 3.000000), l(0.000000, 1.000000, 0.000000, 2.000000)
  ftou r7.yw, r7.yyyw
  ld_indexable(buffer)(float,float,float,float) r8.y, r7.yyyy, t2.yxzw
  ld_indexable(buffer)(float,float,float,float) r8.z, r7.wwww, t2.yzxw
  ftou r6.w, r7.z
  ld_indexable(buffer)(float,float,float,float) r7.y, r6.wwww, t2.wxyz
  mad r9.xy, r7.xxxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
  ftou r9.xy, r9.xyxx
  ld_indexable(buffer)(float,float,float,float) r7.z, r9.xxxx, t2.wyxz
  ld_indexable(buffer)(float,float,float,float) r7.w, r9.yyyy, t2.wyzx
  add r7.xyz, -r8.xyzx, r7.yzwy
  mad r7.xyz, r5.wwww, r7.xyzx, r8.xyzx
  mul r7.xyz, r7.xyzx, r2.xyzx
  mov r5.w, r5.x
  mov r6.w, r5.y
  mov r7.w, r5.z
else 
  uge r8.x, r0.x, r0.y
  and r0.z, r0.z, r8.x
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r8.xyzw, r0.xxxx, cb0[10].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r8.y, r8.x
    iadd r0.y, r8.z, r0.y
    iadd r0.y, r8.w, r0.y
    ige r8.xyzw, r0.xxxx, cb0[11].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r8.y, r8.x
    iadd r0.z, r8.z, r0.z
    iadd r0.z, r8.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r3.y, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r8.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r4.xyz, r0.xxxx, r8.xyzx, cb5[25].xyzx
    imul null, r0.x, vThreadID.x, l(0x0019660d)
    imul null, r0.y, cb0[9].z, l(0x0019660d)
    iadd r0.xy, r0.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r0.z, r0.x, r0.x, l(0x3c3c2745)
    imad r8.x, r0.y, r0.z, r0.x
    imad r0.y, r0.z, r8.x, r0.y
    imad r0.x, r8.x, r0.y, r0.x
    imad r0.x, r8.x, r0.x, r0.z
    ishr r0.x, r0.x, l(8)
    and r0.x, r0.x, l(0x00ffffff)
    utof r0.x, r0.x
    mul r1.z, r0.x, l(0.000000)
    max r0.x, cb4[0].x, l(0.000010)
    add r0.y, r0.x, l(-0.000100)
    lt r3.w, r0.w, r0.y
    div r3.z, r0.w, r0.x
    mul r6.xyz, cb4[7].xyzx, cb4[8].xyzx
    mul r0.x, cb4[7].w, cb4[9].x
    mul r4.w, r0.x, cb4[9].y
    add r0.x, r3.z, -cb0[23].y
    mul_sat r0.x, r0.x, cb0[23].w
    mul r0.y, r0.x, cb0[24].x
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[24].x
    add r8.x, r0.y, l(1.000000)
    movc r0.z, r0.z, r8.x, r0.y
    mad r0.x, r0.x, cb0[24].x, -r0.y
    mul r8.xy, r0.yzyy, l(3.000000, 3.000000, 0.000000, 0.000000)
    ftou r8.x, r8.x
    ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t2.xwyz
    mad r9.xy, r0.yyyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
    ftou r9.xy, r9.xyxx
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.xxxx, t2.ywxz
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.yyyy, t2.ywzx
    ftou r0.y, r8.y
    ld_indexable(buffer)(float,float,float,float) r9.x, r0.yyyy, t2.xyzw
    mad r0.yz, r0.zzzz, l(0.000000, 3.000000, 3.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
    ftou r0.yz, r0.yyzy
    ld_indexable(buffer)(float,float,float,float) r9.y, r0.yyyy, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r0.zzzz, t2.yzxw
    add r9.xyz, -r8.xzwx, r9.xyzx
    mad r7.xyz, r0.xxxx, r9.xyzx, r8.xzwx
    mov r2.xyz, l(1.000000,1.000000,1.000000,0)
    mov r1.x, cb4[0].x
    mov r1.y, cb4[2].x
    mov r2.w, cb4[3].x
    mov r3.x, cb4[3].y
  else 
    mov r0.w, l(0)
    mov r6.xyz, l(0,0,0,0)
    mov r1.xyz, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r7.xyz, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
  endif 
  mov r6.w, l(0)
  mov r7.w, l(0)
  mov r1.w, l(0)
  mov r5.xyzw, l(0,0,0,0)
endif 
and r0.x, r3.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r8.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r8.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r8.w, r8.y, l(0), g0.xxxx
  iadd r8.w, r0.y, r8.w
  ld_structured r9.x, r8.z, l(0), g0.xxxx
  iadd r9.x, r8.w, r9.x
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r8.x, l(0), r0.x
  store_structured g0.x, r8.y, l(0), r0.y
  store_structured g0.x, r8.z, l(0), r8.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r9.x
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r8.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r8.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r8.w, r8.y, l(0), g1.xxxx
  iadd r8.w, r0.z, r8.w
  ld_structured r9.x, r8.z, l(0), g1.xxxx
  iadd r9.x, r8.w, r9.x
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r8.x, l(0), r0.y
  store_structured g1.x, r8.y, l(0), r0.z
  store_structured g1.x, r8.z, l(0), r8.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r9.x
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r8.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r8.x
endif 
sync_g_t
if_nz r3.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r6.xxxx
  ishl r8.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r8.xyzw, r0.xxxx, r8.xyzw
  iadd r8.xyzw, r8.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r8.xxxx, r6.yyyy
  imad r9.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r6.zzzz
  store_uav_typed u1.xyzw, r8.yyyy, r4.wwww
  store_uav_typed u1.xyzw, r9.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r9.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r9.wwww, r2.zzzz
  store_uav_typed u1.xyzw, r8.zzzz, r1.xxxx
  imad r9.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r1.yyyy
  store_uav_typed u1.xyzw, r9.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r9.zzzz, r3.zzzz
  store_uav_typed u1.xyzw, r9.wwww, r4.xxxx
  imad r9.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r9.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r9.zzzz, r5.wwww
  store_uav_typed u1.xyzw, r8.wwww, r6.wwww
  store_uav_typed u1.xyzw, r9.wwww, r7.wwww
  imad r4.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r4.xyzw, r4.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r4.xxxx, r7.xxxx
  store_uav_typed u1.xyzw, r4.yyyy, r7.yyyy
  store_uav_typed u1.xyzw, r4.zzzz, r7.zzzz
  store_uav_typed u1.xyzw, r4.wwww, r1.wwww
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r2.wwww
  store_uav_typed u1.xyzw, r1.yyyy, r3.xxxx
  store_uav_typed u0.xyzw, r0.yyyy, r3.yyyy
  store_uav_typed u1.xyzw, r1.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r5.yyyy
  imad r0.x, l(26), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r5.zzzz
endif 
ret 
// Approximately 259 instruction slots used
