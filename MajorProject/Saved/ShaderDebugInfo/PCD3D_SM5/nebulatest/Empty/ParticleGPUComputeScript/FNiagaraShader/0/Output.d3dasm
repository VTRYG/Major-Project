//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   uint UseColorBuffer_Emitter_NewStaticMesh;// Offset:  372 Size:     4 [unused]
//   uint SectionCount_Emitter_NewStaticMesh;// Offset:  376 Size:     4
//   row_major float4x4 InstanceTransform_Emitter_NewStaticMesh;// Offset:  384 Size:    64 [unused]
//   row_major float4x4 InstanceTransformInverseTransposed_Emitter_NewStaticMesh;// Offset:  448 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Emitter_NewStaticMesh;// Offset:  512 Size:    64 [unused]
//   float InstanceInvDeltaTime_Emitter_NewStaticMesh;// Offset:  576 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Emitter_NewStaticMesh;// Offset:  592 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Emitter_NewStaticMesh;// Offset:  608 Size:     4
//   uint NumTexCoordName_Emitter_NewStaticMesh;// Offset:  612 Size:     4
//   float3 TilingAxes_Local_CurlNoiseForce_VectorField;// Offset:  624 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce_VectorField;// Offset:  640 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce_VectorField;// Offset:  656 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce_VectorField;// Offset:  672 Size:    12 [unused]
//   float3 TilingAxes_Emitter_VectorField32;// Offset:  688 Size:    12 [unused]
//   float3 Dimensions_Emitter_VectorField32;// Offset:  704 Size:    12 [unused]
//   float3 MinBounds_Emitter_VectorField32;// Offset:  720 Size:    12
//   float3 MaxBounds_Emitter_VectorField32;// Offset:  736 Size:    12
//   float3 TilingAxes_Local_CurlNoiseForce001_VectorField;// Offset:  752 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce001_VectorField;// Offset:  768 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce001_VectorField;// Offset:  784 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce001_VectorField;// Offset:  800 Size:    12 [unused]
//   float MinTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  812 Size:     4
//   float MaxTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  816 Size:     4 [unused]
//   float InvTimeRange_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  820 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  824 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4 [unused]
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_InitializeParticle_Lifetime;// Offset:    0 Size:     4
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   16 Size:    16
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   32 Size:     4
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   48 Size:    16
//   float Constants_Emitter_InitializeParticle_SpriteRotation;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_CurlNoiseForce_RandomSeed;// Offset:   96 Size:     4
//   float Constants_Emitter_CurlNoiseForce_NoiseFrequency;// Offset:  100 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce_PanNoiseField;// Offset:  112 Size:    16 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskAngle;// Offset:  128 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskFalloffAngle;// Offset:  132 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_NoiseStrength;// Offset:  136 Size:     4
//   int Constants_Emitter_CurlNoiseForce001_RandomSeed;// Offset:  140 Size:     4
//   float Constants_Emitter_CurlNoiseForce001_NoiseFrequency;// Offset:  144 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce001_PanNoiseField;// Offset:  160 Size:    16 [unused]
//   float Constants_Emitter_CurlNoiseForce001_CurlNoiseConeMaskAngle;// Offset:  176 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce001_CurlNoiseConeMaskFalloffAngle;// Offset:  180 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce001_NoiseStrength;// Offset:  184 Size:     4
//   float Constants_Emitter_Drag_Drag; // Offset:  188 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  192 Size:     4 [unused]
//   float Constants_Emitter_VortexForce_InfluenceFalloffRadius;// Offset:  196 Size:     4 [unused]
//   float4 Constants_Emitter_VortexForce_VortexAxis;// Offset:  208 Size:    16
//   float Constants_Emitter_VortexForce_VortexForceAmount;// Offset:  224 Size:     4
//   float Constants_Emitter_VortexForce_OriginPullAmount;// Offset:  228 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  232 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  236 Size:     4 [unused]
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  240 Size:     4
//   float Emitter_SpawnRate;           // Offset:  244 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VectorFieldSampler_Emitter_VectorField32    sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// IndexBuffer_Emitter_NewStaticMesh    texture    uint         buf             t2      1 
// VertexBuffer_Emitter_NewStaticMesh    texture   float         buf             t3      1 
// TexCoordBuffer_Emitter_NewStaticMesh    texture  float2         buf             t4      1 
// SectionBuffer_Emitter_NewStaticMesh    texture   uint4         buf             t5      1 
// TriangleBuffer_Emitter_NewStaticMesh    texture   uint4         buf             t6      1 
// VectorFieldTexture_Emitter_VectorField32    texture  float4          3d             t7      1 
// CurveLUT_Emitter_Value_ScaleFactor_FloatCurve    texture   float         buf             t8      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[52], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB4[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_buffer (float,float,float,float) t8
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 14
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  iadd r1.x, r0.x, cb0[21].y
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ishl r2.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
  iadd r2.xyzw, r0.xxxx, r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r2.xxxx, t0.yxzw
  imad r3.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r2.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.x, r3.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r2.zzzz, t0.yxzw
  imad r4.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.xxxx, t0.zwxy
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.yyyy, t0.zwyx
  ld_indexable(buffer)(float,float,float,float) r2.z, r4.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.wwww, t0.xyzw
  imad r5.xyzw, l(13, 15, 17, 21), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.x, r5.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.y, r2.wwww, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.z, r5.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r2.w, r5.wwww, t0.yzwx
  imad r5.xyzw, l(22, 23, 24, 27), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.w, r5.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t0.xyzw
  ld_indexable(buffer)(sint,sint,sint,sint) r5.y, r0.xxxx, t1.yxzw
  ld_indexable(buffer)(float,float,float,float) r7.x, r5.wwww, t0.xyzw
  imad r5.zw, l(0, 0, 28, 29), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r7.y, r5.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r7.z, r5.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r5.z, r2.z, l(0.000010)
  add r5.w, r5.z, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r5.z, r0.w, r5.z
  mov r8.x, cb4[6].x
  mov r8.yw, cb3[1].xxxx
  imad r8.xy, r8.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r6.w, r8.y, l(0x3c88596c), r8.x
  imad r7.w, l(0x3c88596c), r6.w, r8.y
  imad r8.x, r6.w, r7.w, l(0x3c88596c)
  imad r6.w, r7.w, r8.x, r6.w
  ishr r6.w, r6.w, l(8)
  and r6.w, r6.w, l(0x00ffffff)
  utof r6.w, r6.w
  mad r9.xyz, r6.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r6.xyzx
  mul r9.xyz, r9.xyzx, cb4[6].yyyy
  mad r9.xyz, r9.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
  add r10.xyz, -cb0[45].xyzx, cb0[46].xyzx
  div r9.xyz, r9.xyzx, r10.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t7.xyzw, s0, l(0.000000)
  mov r8.z, cb4[8].w
  imad r8.xy, r8.zwzz, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r6.w, r8.y, l(0x3ca1bf79), r8.x
  imad r7.w, l(0x3ca1bf79), r6.w, r8.y
  imad r8.x, r6.w, r7.w, l(0x3ca1bf79)
  imad r6.w, r7.w, r8.x, r6.w
  ishr r6.w, r6.w, l(8)
  and r6.w, r6.w, l(0x00ffffff)
  utof r6.w, r6.w
  mad r8.xyz, r6.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r6.xyzx
  mul r8.xyz, r8.xyzx, cb4[9].xxxx
  mad r8.xyz, r8.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
  div r8.xyz, r8.xyzx, r10.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t7.xyzw, s0, l(0.000000)
  mul r8.xyz, r8.xyzx, cb4[11].zzzz
  mad r8.xyz, r9.xyzx, cb4[8].zzzz, r8.xyzx
  add r9.xyz, -r6.xyzx, cb2[25].xyzx
  dp3 r6.w, r9.xyzx, r9.xyzx
  sqrt r9.w, r6.w
  lt r6.w, r9.w, l(0.000010)
  movc r9.xyzw, r6.wwww, l(0,0,1.000000,1.000000), r9.xyzw
  div r9.xyz, r9.xyzx, r9.wwww
  movc r9.xyz, r6.wwww, l(0,0,1.000000,0), r9.xyzx
  mul r10.xyz, r9.zxyz, cb4[13].yzxy
  mad r10.xyz, r9.yzxy, cb4[13].zxyz, -r10.xyzx
  mad r9.xyz, cb4[14].yyyy, r9.xyzx, r9.xyzx
  add r9.xyz, r9.xyzx, r10.xyzx
  dp3 r6.w, r9.xyzx, r9.xyzx
  rsq r6.w, r6.w
  mul r9.xyz, r6.wwww, r9.xyzx
  mad r8.xyz, r9.xyzx, cb4[14].xxxx, r8.xyzx
  max r6.w, r4.x, l(0.000100)
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r8.xyz, r8.xyzx, r6.wwww
  mad r7.xyz, r8.xyzx, cb1[0].xxxx, r7.xyzx
  max r6.w, cb4[11].w, l(0.000000)
  mad r6.w, cb1[0].x, r6.w, l(1.000000)
  div r7.xyz, r7.xyzx, r6.wwww
  mad r6.xyz, r7.xyzx, cb1[0].xxxx, r6.xyzx
  add r6.w, r5.z, -cb0[50].w
  mul_sat r6.w, r6.w, cb0[51].y
  mul r7.w, r6.w, cb0[51].z
  round_ni r7.w, r7.w
  lt r8.x, r7.w, cb0[51].z
  add r8.y, r7.w, l(1.000000)
  movc r8.x, r8.x, r8.y, r7.w
  mad r6.w, r6.w, cb0[51].z, -r7.w
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t8.yzwx
  ftou r8.x, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t8.xyzw
  add r8.x, -r7.w, r8.x
  mad r6.w, r6.w, r8.x, r7.w
  mul r6.w, r6.w, cb4[15].x
  mul r8.xy, r6.wwww, r3.zwzz
  mov r6.w, r7.x
  mov r8.z, r7.z
  mov r7.xw, r7.xxxy
else 
  uge r8.w, r0.x, r0.y
  and r0.z, r0.z, r8.w
  if_nz r0.z
    iadd r0.y, -r0.y, r0.x
    ige r9.xyzw, r0.yyyy, cb0[10].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r9.y, r9.x
    iadd r0.z, r9.z, r0.z
    iadd r0.z, r9.w, r0.z
    ige r9.xyzw, r0.yyyy, cb0[11].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r8.w, r9.y, r9.x
    iadd r8.w, r9.z, r8.w
    iadd r8.w, r9.w, r8.w
    iadd r0.z, r0.z, r8.w
    iadd r0.y, r0.y, -cb0[r0.z + 12].w
    iadd r5.y, r0.y, cb3[0].y
    itof r0.y, r0.y
    mad r0.y, cb0[r0.z + 12].x, r0.y, cb0[r0.z + 12].y
    add r0.w, -r0.y, cb1[0].x
    mov r9.x, vThreadID.x
    mov r9.y, cb0[9].z
    imad r0.yz, r9.xxyx, l(0, 0x0019660d, 0x0019660d, 0), l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r8.w, r0.y, r0.y, l(0x3c3c2745)
    imad r9.x, r0.z, r8.w, r0.y
    imad r0.z, r8.w, r9.x, r0.z
    imad r0.y, r9.x, r0.z, r0.y
    imad r0.y, r9.x, r0.y, r8.w
    ishr r0.y, r0.y, l(8)
    and r0.y, r0.y, l(0x00ffffff)
    utof r0.y, r0.y
    mul r4.y, r0.y, l(0.000000)
    ieq r0.y, cb0[23].z, l(0)
    if_z cb0[23].z
      mov r0.z, l(-1)
      mov r8.w, l(0)
      mov r9.xy, l(0,0,0,0)
    endif 
    if_z r0.y
      imad r0.x, r0.x, l(0x59834000), cb0[9].z
      iadd r9.z, r0.x, l(0x00196612)
      iadd r0.x, r0.x, r9.z
      imad r9.z, r9.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r9.w, r9.z, l(16)
      bfi r9.z, l(16), l(16), r9.z, r9.w
      imad r9.w, l(0xbf793ca1), r9.z, l(0x596c3c88)
      imad r10.x, r9.z, r9.w, l(0xbf793ca1)
      imad r9.z, r9.w, r10.x, r9.z
      imad r9.z, r10.x, r9.z, r9.w
      utof r9.z, r9.z
      mul r9.z, r9.z, l(0.000000)
      utof r9.w, cb0[23].z
      mul r9.z, r9.w, r9.z
      ftou r9.z, r9.z
      iadd r9.w, cb0[23].z, l(-1)
      umin r9.z, r9.w, r9.z
      ld_indexable(buffer)(uint,uint,uint,uint) r10.xyzw, r9.zzzz, t5.xyzw
      iadd r9.z, r0.x, l(0x00196612)
      iadd r0.x, r0.x, r9.z
      imad r9.z, r9.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r9.w, r9.z, l(16)
      bfi r9.z, l(16), l(16), r9.z, r9.w
      imad r9.w, l(0xbf793ca1), r9.z, l(0x596c3c88)
      imad r11.x, r9.z, r9.w, l(0xbf793ca1)
      imad r9.z, r9.w, r11.x, r9.z
      imad r9.z, r11.x, r9.z, r9.w
      utof r9.z, r9.z
      mul r9.z, r9.z, l(0.000000)
      lt r9.z, r10.z, r9.z
      if_nz r9.z
        ld_indexable(buffer)(uint,uint,uint,uint) r10.xy, r10.wwww, t5.xyzw
      endif 
      iadd r9.z, r0.x, l(0x00196612)
      iadd r0.x, r0.x, r9.z
      imad r9.z, r9.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r9.w, r9.z, l(16)
      bfi r9.z, l(16), l(16), r9.z, r9.w
      imad r9.w, l(0xbf793ca1), r9.z, l(0x596c3c88)
      imad r10.z, r9.z, r9.w, l(0xbf793ca1)
      imad r9.z, r9.w, r10.z, r9.z
      imad r9.z, r10.z, r9.z, r9.w
      utof r9.z, r9.z
      mul r9.z, r9.z, l(0.000000)
      if_z cb0[38].x
        utof r9.w, r10.y
        mul r9.w, r9.w, r9.z
        ftou r9.w, r9.w
        iadd r10.z, r10.y, l(-1)
        umin r9.w, r9.w, r10.z
        iadd r0.z, r9.w, r10.x
      else 
        utof r9.w, r10.y
        mul r9.z, r9.w, r9.z
        ftou r9.z, r9.z
        iadd r9.w, r10.y, l(-1)
        umin r9.z, r9.w, r9.z
        iadd r9.w, r9.z, r10.x
        ld_indexable(buffer)(uint,uint,uint,uint) r10.yz, r9.wwww, t6.zxyw
        iadd r9.w, r0.x, l(0x00196612)
        iadd r0.x, r0.x, r9.w
        imad r9.w, r9.w, l(0x0019660d), l(0x3c6ef35f)
        ushr r10.w, r9.w, l(16)
        bfi r9.w, l(16), l(16), r9.w, r10.w
        imad r10.w, l(0xbf793ca1), r9.w, l(0x596c3c88)
        imad r11.x, r9.w, r10.w, l(0xbf793ca1)
        imad r9.w, r10.w, r11.x, r9.w
        imad r9.w, r11.x, r9.w, r10.w
        utof r9.w, r9.w
        mul r9.w, r9.w, l(0.000000)
        lt r9.w, r10.y, r9.w
        movc r9.z, r9.w, r10.z, r9.z
        iadd r0.z, r9.z, r10.x
      endif 
      iadd r9.z, r0.x, l(0x00196612)
      iadd r0.x, r0.x, r9.z
      imad r9.z, r9.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r9.w, r9.z, l(16)
      bfi r9.z, l(16), l(16), r9.z, r9.w
      imad r9.w, l(0xbf793ca1), r9.z, l(0x596c3c88)
      imad r10.x, r9.z, r9.w, l(0xbf793ca1)
      imad r9.z, r9.w, r10.x, r9.z
      imad r9.z, r10.x, r9.z, r9.w
      utof r9.z, r9.z
      mul r9.z, r9.z, l(0.000000)
      imad r0.x, r0.x, l(0x0019660d), l(0x54264e49)
      ushr r9.w, r0.x, l(16)
      bfi r0.x, l(16), l(16), r0.x, r9.w
      imad r9.w, l(0xbf793ca1), r0.x, l(0x596c3c88)
      imad r10.x, r0.x, r9.w, l(0xbf793ca1)
      imad r0.x, r9.w, r10.x, r0.x
      imad r0.x, r10.x, r0.x, r9.w
      utof r0.x, r0.x
      mul r9.w, r0.x, l(0.000000)
      sqrt r9.z, r9.z
      add r8.w, -r9.z, l(1.000000)
      mad r0.x, -r0.x, l(0.000000), l(1.000000)
      mul r9.x, r0.x, r9.z
      mul r9.y, r9.z, r9.w
    endif 
    if_z cb0[23].z
      mov r10.xyz, l(0,0,0,0)
    endif 
    if_z r0.y
      imul null, r0.x, r0.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imul null, r0.y, r0.x, l(3)
      imad r9.zw, r0.zzzz, l(0, 0, 3, 3), l(0, 0, 1, 2)
      ld_indexable(buffer)(uint,uint,uint,uint) r9.z, r9.zzzz, t2.yzxw
      imul null, r10.w, r9.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t2.yzwx
      imul null, r11.x, r9.w, l(3)
      ld_indexable(buffer)(float,float,float,float) r11.y, r0.yyyy, t3.wxyz
      imad r0.xy, r0.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r11.z, r0.xxxx, t3.wyxz
      ld_indexable(buffer)(float,float,float,float) r11.w, r0.yyyy, t3.wyzx
      ld_indexable(buffer)(float,float,float,float) r12.x, r10.wwww, t3.xyzw
      imad r0.xy, r9.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r12.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r12.z, r0.yyyy, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r13.x, r11.xxxx, t3.xyzw
      imad r0.xy, r9.wwww, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r13.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r13.z, r0.yyyy, t3.yzxw
      mul r12.xyz, r9.xxxx, r12.xyzx
      mad r11.xyz, r11.yzwy, r8.wwww, r12.xyzx
      mad r10.xyz, r13.xyzx, r9.yyyy, r11.xyzx
    endif 
    if_nz cb0[38].y
      imul null, r0.x, r0.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imad r0.yz, r0.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t2.yxzw
      ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t2.yzxw
      imul null, r0.x, r0.x, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r9.zw, r0.xxxx, t4.zwxy
      imul null, r0.x, r0.y, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r0.xy, r0.xxxx, t4.xyzw
      imul null, r0.z, r0.z, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r11.xy, r0.zzzz, t4.xyzw
      mul r0.xy, r9.xxxx, r0.xyxx
      mad r0.xy, r9.zwzz, r8.wwww, r0.xyxx
      mad r2.xy, r11.xyxx, r9.yyyy, r0.xyxx
    else 
      mov r2.xy, l(0,0,0,0)
    endif 
    max r0.x, cb4[0].x, l(0.000010)
    add r0.y, r0.x, l(-0.000100)
    lt r5.w, r0.w, r0.y
    div r5.z, r0.w, r0.x
    mov r9.x, cb4[6].x
    mov r9.yw, cb3[1].xxxx
    imad r0.xy, r9.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r0.x, r0.y, l(0x3ca1bf79), r0.x
    imad r0.y, l(0x3ca1bf79), r0.x, r0.y
    imad r0.z, r0.x, r0.y, l(0x3ca1bf79)
    imad r0.x, r0.y, r0.z, r0.x
    ishr r0.x, r0.x, l(8)
    and r0.x, r0.x, l(0x00ffffff)
    utof r0.x, r0.x
    mad r0.xyz, r0.xxxx, l(0.000244, 0.000244, 0.000244, 0.000000), r10.xyzx
    mul r0.xyz, r0.xyzx, cb4[6].yyyy
    mad r0.xyz, r0.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
    add r11.xyz, -cb0[45].xyzx, cb0[46].xyzx
    div r0.xyz, r0.xyzx, r11.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r0.xyz, r0.xyzx, t7.xyzw, s0, l(0.000000)
    mov r9.z, cb4[8].w
    imad r9.xy, r9.zwzz, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r8.w, r9.y, l(0x3cbb2586), r9.x
    imad r9.x, l(0x3cbb2586), r8.w, r9.y
    imad r9.y, r8.w, r9.x, l(0x3cbb2586)
    imad r8.w, r9.x, r9.y, r8.w
    ishr r8.w, r8.w, l(8)
    and r8.w, r8.w, l(0x00ffffff)
    utof r8.w, r8.w
    mad r9.xyz, r8.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r10.xyzx
    mul r9.xyz, r9.xyzx, cb4[9].xxxx
    mad r9.xyz, r9.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
    div r9.xyz, r9.xyzx, r11.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t7.xyzw, s0, l(0.000000)
    mul r9.xyz, r9.xyzx, cb4[11].zzzz
    mad r0.xyz, r0.xyzx, cb4[8].zzzz, r9.xyzx
    add r9.xyz, -r10.xyzx, cb2[25].xyzx
    dp3 r8.w, r9.xyzx, r9.xyzx
    sqrt r9.w, r8.w
    lt r8.w, r9.w, l(0.000010)
    movc r9.xyzw, r8.wwww, l(0,0,1.000000,1.000000), r9.xyzw
    div r9.xyz, r9.xyzx, r9.wwww
    movc r9.xyz, r8.wwww, l(0,0,1.000000,0), r9.xyzx
    mul r11.xyz, r9.zxyz, cb4[13].yzxy
    mad r11.xyz, r9.yzxy, cb4[13].zxyz, -r11.xyzx
    mad r9.xyz, cb4[14].yyyy, r9.xyzx, r9.xyzx
    add r9.xyz, r9.xyzx, r11.xyzx
    dp3 r8.w, r9.xyzx, r9.xyzx
    rsq r8.w, r8.w
    mul r9.xyz, r8.wwww, r9.xyzx
    mad r0.xyz, r9.xyzx, cb4[14].xxxx, r0.xyzx
    max r8.w, cb4[2].x, l(0.000100)
    div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
    mul r0.xyz, r0.xyzx, r8.wwww
    mul r0.xyz, r0.wwww, r0.xyzx
    max r8.w, cb4[11].w, l(0.000000)
    mad r8.w, r0.w, r8.w, l(1.000000)
    div r7.xyz, r0.xyzx, r8.wwww
    mad r6.xyz, r7.xyzx, r0.wwww, r10.xyzx
    add r0.x, r5.z, -cb0[50].w
    mul_sat r0.x, r0.x, cb0[51].y
    mul r0.y, r0.x, cb0[51].z
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[51].z
    add r8.w, r0.y, l(1.000000)
    movc r0.z, r0.z, r8.w, r0.y
    mad r0.x, r0.x, cb0[51].z, -r0.y
    ftou r0.y, r0.y
    ld_indexable(buffer)(float,float,float,float) r0.y, r0.yyyy, t8.yxzw
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t8.yzxw
    add r0.z, -r0.y, r0.z
    mad r0.x, r0.x, r0.z, r0.y
    mul r0.x, r0.x, cb4[15].x
    mul r8.xy, r0.xxxx, cb4[3].xyxx
    mov r1.xyzw, cb4[1].xyzw
    mov r3.xy, r2.yyyy
    mov r3.zw, cb4[3].xxxy
    mov r2.z, cb4[0].x
    mov r4.x, cb4[2].x
    mov r6.w, r7.x
    mov r8.z, r7.z
    mov r2.w, l(1.000000)
    mov r4.zw, l(0,0,1.000000,1.000000)
    mov r7.xw, r7.xxxy
  else 
    mov r0.w, l(0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r8.xyz, l(0,0,0,0)
    mov r7.xyzw, l(0,0,0,0)
    mov r5.yzw, l(0,0,0,0)
  endif 
  mov r5.x, l(0)
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r9.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r9.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r8.w, r9.y, l(0), g0.xxxx
  iadd r8.w, r0.y, r8.w
  ld_structured r9.w, r9.z, l(0), g0.xxxx
  iadd r9.w, r8.w, r9.w
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r9.x, l(0), r0.x
  store_structured g0.x, r9.y, l(0), r0.y
  store_structured g0.x, r9.z, l(0), r8.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r9.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r9.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r9.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r8.w, r9.y, l(0), g1.xxxx
  iadd r8.w, r0.z, r8.w
  ld_structured r9.w, r9.z, l(0), g1.xxxx
  iadd r9.w, r8.w, r9.w
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r9.x, l(0), r0.y
  store_structured g1.x, r9.y, l(0), r0.z
  store_structured g1.x, r9.z, l(0), r8.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r9.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r9.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r9.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r1.xxxx
  ishl r9.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r9.xyzw, r0.xxxx, r9.xyzw
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r1.yyyy
  imad r10.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r1.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r1.wwww
  store_uav_typed u1.xyzw, r10.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r3.xxxx
  store_uav_typed u1.xyzw, r10.wwww, r3.yyyy
  store_uav_typed u1.xyzw, r9.zzzz, r2.yyyy
  imad r1.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r3.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r2.zzzz
  store_uav_typed u1.xyzw, r1.wwww, r4.xxxx
  imad r1.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r5.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r6.xxxx
  store_uav_typed u1.xyzw, r9.wwww, r6.yyyy
  store_uav_typed u1.xyzw, r1.wwww, r6.zzzz
  imad r1.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r6.wwww
  store_uav_typed u1.xyzw, r1.yyyy, r7.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r8.zzzz
  store_uav_typed u1.xyzw, r1.wwww, r2.wwww
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r4.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r8.xxxx
  imad r1.xyzw, l(26, 27, 28, 29), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r8.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r5.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r7.xxxx
  store_uav_typed u1.xyzw, r1.zzzz, r7.yyyy
  store_uav_typed u1.xyzw, r1.wwww, r7.zzzz
endif 
ret 
// Approximately 513 instruction slots used
