//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_BeamWidth_FloatCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_BeamWidth_FloatCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_BeamWidth_FloatCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_BeamWidth_FloatCurve;// Offset:  384 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4 [unused]
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_InitializeParticle_Lifetime;// Offset:    0 Size:     4
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   16 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   48 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_SpriteRotation;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float4 Emitter_BeamVector;         // Offset:   96 Size:    16
//   float4 Emitter_BeamStart;          // Offset:  112 Size:    16
//   float Emitter_BeamStartEndLength;  // Offset:  128 Size:     4 [unused]
//   float4 Emitter_BeamDirection;      // Offset:  144 Size:    16
//   float4 Emitter_BeamStartTangent;   // Offset:  160 Size:    16
//   float4 Emitter_BeamEnd;            // Offset:  176 Size:    16
//   float4 Emitter_BeamEndTangent;     // Offset:  192 Size:    16
//   float Constants_Emitter_SpawnBeam_SplinePositionErrorThreshold;// Offset:  208 Size:     4 [unused]
//   bool Emitter_UseBeamTangents;      // Offset:  212 Size:     4
//   int Emitter_BeamID;                // Offset:  216 Size:     4
//   float Constants_Emitter_FloatFromCurve002_ScaleCurve;// Offset:  220 Size:     4
//   float Constants_Emitter_BeamWidth_BeamTwistAmount;// Offset:  224 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  228 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  232 Size:     4 [unused]
//   float4 User_LaserColour;           // Offset:  240 Size:    16
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  256 Size:    16
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  272 Size:     4
//   float Emitter_AlphaScale;          // Offset:  276 Size:     4
//   float Emitter_SpawnRate;           // Offset:  280 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_BeamWidth_FloatCurve    texture   float         buf             t2      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb2      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_constantbuffer CB3[18], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 17
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(14, 15, 24, 25), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t0.yxzw
  ishl r2.xyz, cb0[21].yyyy, l(4, 5, 1, 0)
  iadd r2.xyz, r0.xxxx, r2.xyzx
  ld_indexable(buffer)(float,float,float,float) r2.x, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(sint,sint,sint,sint) r2.w, r0.xxxx, t1.yzwx
  iadd r3.x, r0.x, cb0[21].y
  ld_indexable(buffer)(sint,sint,sint,sint) r3.x, r3.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r1.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r1.wwww, t0.yzwx
  imad r4.xyzw, l(26, 27, 28, 29), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.y, r4.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.zzzz, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.wwww, t0.xyzw
  imad r5.xyzw, l(30, 31, 33, 34), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r2.y, r2.yyyy, t0.yxzw
  ld_indexable(buffer)(sint,sint,sint,sint) r2.z, r2.zzzz, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r5.wwww, t0.yxzw
  imad r4.w, l(35), cb0[21].y, r0.x
  ld_indexable(buffer)(float,float,float,float) r5.z, r4.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r4.w, r1.x, l(0.000010)
  add r5.w, r4.w, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r4.w, r0.w, r4.w
  mad r6.xyz, r1.zzzz, cb3[6].xyzx, cb3[7].xyzx
  mul r6.w, r1.z, r1.z
  mul r7.x, r1.z, r6.w
  mul r7.yzw, cb3[12].xxyz, l(0.000000, 3.000000, 3.000000, 3.000000)
  mad r8.xyz, -cb3[12].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), cb3[11].xyzx
  mad r8.xyz, cb3[10].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r8.xyzx
  add r8.xyz, r8.xyzx, -cb3[7].xyzx
  mad r7.yzw, -cb3[10].xxyz, l(0.000000, 6.000000, 6.000000, 6.000000), r7.yyzw
  mul r9.xyz, cb3[7].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
  mad r7.yzw, cb3[7].xxyz, l(0.000000, 3.000000, 3.000000, 3.000000), r7.yyzw
  mad r9.xyz, cb3[10].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r9.xyzx
  mul r10.xyz, r6.wwww, r7.yzwy
  mad r10.xyz, r8.xyzx, r7.xxxx, r10.xyzx
  mad r10.xyz, r9.xyzx, r1.zzzz, r10.xyzx
  add r10.xyz, r10.xyzx, cb3[7].xyzx
  mul r11.xyz, r6.wwww, r8.xyzx
  add r7.xyz, r7.yzwy, r7.yzwy
  mul r12.xyz, r1.zzzz, r7.xyzx
  mad r11.xyz, r11.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r12.xyzx
  add r9.xyz, r9.xyzx, r11.xyzx
  mul r8.xyz, r1.zzzz, r8.xyzx
  mad r7.xyz, r8.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), r7.xyzx
  dp3 r6.w, r9.xyzx, r9.xyzx
  rsq r7.w, r6.w
  mul r8.xyz, r7.wwww, r9.xyzx
  dp3 r7.w, r9.xyzx, r7.xyzx
  mul r9.xyz, r7.wwww, r9.xyzx
  div r9.xyz, r9.xyzx, r6.wwww
  add r7.xyz, r7.xyzx, -r9.xyzx
  dp3 r6.w, r7.xyzx, r7.xyzx
  rsq r6.w, r6.w
  mul r7.xyz, r6.wwww, r7.xyzx
  mul r9.xyz, r7.yzxy, r8.zxyz
  mad r9.xyz, r8.yzxy, r7.zxyz, -r9.xyzx
  mul r11.xyz, cb3[9].yzxy, l(1.000000, 0.000000, 0.000000, 0.000000)
  mad r11.xyz, cb3[9].zxyz, l(0.000000, 1.000000, 0.000000, 0.000000), -r11.xyzx
  movc r6.xyz, cb3[13].yyyy, r10.xyzx, r6.xyzx
  movc r8.xyz, cb3[13].yyyy, r8.xyzx, cb3[9].xyzx
  movc r7.xyz, cb3[13].yyyy, r7.xyzx, l(0,0,1.000000,0)
  movc r9.xyz, cb3[13].yyyy, r9.xyzx, r11.xyzx
  mad r6.xyz, r5.xyzx, cb1[0].xxxx, r6.xyzx
  mul r10.xyz, cb3[15].xyzx, cb3[16].xyzx
  mul r6.w, cb3[15].w, cb3[17].x
  mul r6.w, r6.w, cb3[17].y
  mov r7.w, r5.x
  mov r8.w, r5.y
  mov r9.w, r5.z
else 
  uge r10.w, r0.x, r0.y
  and r0.z, r0.z, r10.w
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r11.xyzw, r0.xxxx, cb0[10].xyzw
    and r11.xyzw, r11.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r11.y, r11.x
    iadd r0.y, r11.z, r0.y
    iadd r0.y, r11.w, r0.y
    ige r11.xyzw, r0.xxxx, cb0[11].xyzw
    and r11.xyzw, r11.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r11.y, r11.x
    iadd r0.z, r11.z, r0.z
    iadd r0.z, r11.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    ieq r0.z, r0.y, l(7)
    if_nz r0.z
      iadd r0.z, cb0[20].x, -cb0[r0.y + 12].w
    else 
      iadd r0.z, -cb0[r0.y + 12].w, cb0[r0.y + 13].w
    endif 
    iadd r2.z, r0.x, cb2[0].y
    itof r0.x, r0.x
    mad r0.y, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.y, cb1[0].x
    imul null, r11.x, vThreadID.x, l(0x0019660d)
    imul null, r11.y, cb0[9].z, l(0x0019660d)
    iadd r11.xy, r11.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r0.y, r11.x, r11.x, l(0x3c3c2745)
    imad r10.w, r11.y, r0.y, r11.x
    imad r11.y, r0.y, r10.w, r11.y
    imad r11.x, r10.w, r11.y, r11.x
    imad r0.y, r10.w, r11.x, r0.y
    ishr r0.y, r0.y, l(8)
    and r0.y, r0.y, l(0x00ffffff)
    utof r0.y, r0.y
    mul r2.x, r0.y, l(0.000000)
    iadd r0.y, r0.z, l(-1)
    itof r0.y, r0.y
    div r1.z, r0.x, r0.y
    add r0.x, r1.z, -cb0[23].y
    mul_sat r0.x, r0.x, cb0[23].w
    mul r0.y, r0.x, cb0[24].x
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[24].x
    add r10.w, r0.y, l(1.000000)
    movc r0.z, r0.z, r10.w, r0.y
    mad r0.x, r0.x, cb0[24].x, -r0.y
    ftou r0.y, r0.y
    ld_indexable(buffer)(float,float,float,float) r0.y, r0.yyyy, t2.yxzw
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t2.yzxw
    add r0.z, -r0.y, r0.z
    mad r0.x, r0.x, r0.z, r0.y
    mul r3.y, r0.x, cb3[13].w
    max r0.x, cb3[0].x, l(0.000010)
    add r0.y, r0.x, l(-0.000100)
    lt r5.w, r0.w, r0.y
    div r4.w, r0.w, r0.x
    mad r0.xyz, r1.zzzz, cb3[6].xyzx, cb3[7].xyzx
    mul r10.w, r1.z, r1.z
    mul r11.x, r1.z, r10.w
    mul r11.yzw, cb3[12].xxyz, l(0.000000, 3.000000, 3.000000, 3.000000)
    mad r12.xyz, -cb3[12].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), cb3[11].xyzx
    mad r12.xyz, cb3[10].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r12.xyzx
    add r12.xyz, r12.xyzx, -cb3[7].xyzx
    mad r11.yzw, -cb3[10].xxyz, l(0.000000, 6.000000, 6.000000, 6.000000), r11.yyzw
    mul r13.xyz, cb3[7].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r11.yzw, cb3[7].xxyz, l(0.000000, 3.000000, 3.000000, 3.000000), r11.yyzw
    mad r13.xyz, cb3[10].xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), -r13.xyzx
    mul r14.xyz, r10.wwww, r11.yzwy
    mad r14.xyz, r12.xyzx, r11.xxxx, r14.xyzx
    mad r14.xyz, r13.xyzx, r1.zzzz, r14.xyzx
    add r14.xyz, r14.xyzx, cb3[7].xyzx
    mul r15.xyz, r10.wwww, r12.xyzx
    add r11.xyz, r11.yzwy, r11.yzwy
    mul r16.xyz, r1.zzzz, r11.xyzx
    mad r15.xyz, r15.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r16.xyzx
    add r13.xyz, r13.xyzx, r15.xyzx
    mul r12.xyz, r1.zzzz, r12.xyzx
    mad r11.xyz, r12.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), r11.xyzx
    dp3 r10.w, r13.xyzx, r13.xyzx
    rsq r11.w, r10.w
    mul r12.xyz, r11.wwww, r13.xyzx
    dp3 r11.w, r13.xyzx, r11.xyzx
    mul r13.xyz, r11.wwww, r13.xyzx
    div r13.xyz, r13.xyzx, r10.wwww
    add r11.xyz, r11.xyzx, -r13.xyzx
    dp3 r10.w, r11.xyzx, r11.xyzx
    rsq r10.w, r10.w
    mul r11.xyz, r10.wwww, r11.xyzx
    mul r13.xyz, r11.yzxy, r12.zxyz
    mad r13.xyz, r12.yzxy, r11.zxyz, -r13.xyzx
    mul r15.xyz, cb3[9].yzxy, l(1.000000, 0.000000, 0.000000, 0.000000)
    mad r15.xyz, cb3[9].zxyz, l(0.000000, 1.000000, 0.000000, 0.000000), -r15.xyzx
    movc r6.xyz, cb3[13].yyyy, r14.xyzx, r0.xyzx
    movc r8.xyz, cb3[13].yyyy, r12.xyzx, cb3[9].xyzx
    movc r7.xyz, cb3[13].yyyy, r11.xyzx, l(0,0,1.000000,0)
    movc r9.xyz, cb3[13].yyyy, r13.xyzx, r15.xyzx
    mul r10.xyz, cb3[15].xyzx, cb3[16].xyzx
    mul r0.x, cb3[15].w, cb3[17].x
    mul r6.w, r0.x, cb3[17].y
    mov r1.x, cb3[0].x
    mov r1.y, l(1.000000)
    mov r2.w, cb3[13].z
    mov r1.w, cb3[14].x
    mov r3.zw, l(0,0,1.000000,1.000000)
    mov r4.xz, l(1.000000,0,10.000000,0)
    mov r2.y, l(10.000000)
  else 
    mov r0.w, l(0)
    mov r9.xyz, l(0,0,0,0)
    mov r7.xyz, l(0,0,0,0)
    mov r8.xyz, l(0,0,0,0)
    mov r10.xyz, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.yzw, l(0,0,0,0)
    mov r4.xzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r5.w, l(0)
  endif 
  mov r7.w, l(0)
  mov r8.w, l(0)
  mov r9.w, l(0)
  mov r3.x, l(0)
  mov r4.y, l(0)
  mov r5.xyz, l(0,0,0,0)
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r11.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r11.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r10.w, r11.y, l(0), g0.xxxx
  iadd r10.w, r0.y, r10.w
  ld_structured r11.w, r11.z, l(0), g0.xxxx
  iadd r11.w, r10.w, r11.w
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r11.x, l(0), r0.x
  store_structured g0.x, r11.y, l(0), r0.y
  store_structured g0.x, r11.z, l(0), r10.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r11.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r11.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r11.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r10.w, r11.y, l(0), g1.xxxx
  iadd r10.w, r0.z, r10.w
  ld_structured r11.w, r11.z, l(0), g1.xxxx
  iadd r11.w, r10.w, r11.w
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r11.x, l(0), r0.y
  store_structured g1.x, r11.y, l(0), r0.z
  store_structured g1.x, r11.z, l(0), r10.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r11.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r11.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r11.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r9.xxxx
  ishl r11.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r11.xyzw, r0.xxxx, r11.xyzw
  iadd r11.xyzw, r11.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r11.xxxx, r9.yyyy
  imad r12.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r12.xyzw, r12.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r12.xxxx, r9.zzzz
  store_uav_typed u1.xyzw, r11.yyyy, r7.xxxx
  store_uav_typed u1.xyzw, r12.yyyy, r7.yyyy
  store_uav_typed u1.xyzw, r12.zzzz, r7.zzzz
  store_uav_typed u1.xyzw, r12.wwww, r8.xxxx
  store_uav_typed u1.xyzw, r11.zzzz, r8.yyyy
  imad r12.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r12.xyzw, r12.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r12.xxxx, r8.zzzz
  store_uav_typed u1.xyzw, r12.yyyy, r10.xxxx
  store_uav_typed u1.xyzw, r12.zzzz, r10.yyyy
  store_uav_typed u1.xyzw, r12.wwww, r10.zzzz
  imad r10.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r6.wwww
  store_uav_typed u1.xyzw, r10.yyyy, r1.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r1.yyyy
  store_uav_typed u1.xyzw, r11.wwww, r2.xxxx
  store_uav_typed u1.xyzw, r10.wwww, r4.wwww
  imad r10.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r6.xxxx
  store_uav_typed u1.xyzw, r10.yyyy, r6.yyyy
  store_uav_typed u1.xyzw, r10.zzzz, r6.zzzz
  store_uav_typed u1.xyzw, r10.wwww, r7.wwww
  imad r6.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r8.wwww
  store_uav_typed u1.xyzw, r6.yyyy, r9.wwww
  store_uav_typed u0.xyzw, r0.yyyy, r2.wwww
  store_uav_typed u0.xyzw, r0.zzzz, r3.xxxx
  store_uav_typed u1.xyzw, r6.zzzz, r1.zzzz
  store_uav_typed u1.xyzw, r6.wwww, r1.wwww
  imad r1.xyzw, l(26, 27, 28, 29), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r3.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r3.wwww
  store_uav_typed u1.xyzw, r1.wwww, r4.xxxx
  imad r1.xyzw, l(30, 31, 33, 34), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r4.zzzz
  ishl r0.y, cb0[21].z, l(5)
  iadd r0.y, r0.x, r0.y
  iadd r0.y, r0.y, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r2.yyyy
  store_uav_typed u0.xyzw, r11.xxxx, r2.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r5.yyyy
  imad r0.x, l(35), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r5.zzzz
endif 
ret 
// Approximately 341 instruction slots used
